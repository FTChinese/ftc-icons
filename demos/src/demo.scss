@import "../../main";
@include oAssetsSetModulePaths((
	ftc-icons: '..',
));

body {
	@include oColorsFor(page);
}

ul {
	margin: 0;
	padding: 0;
	list-style-type: none;
	li {
		display: inline-block;
		width: 180px;
		margin: 0 0 20px;
		text-align: center;
		i {
			display: inline-block;
			border: 1px dotted #333;
			width: 100px;
			height: 100px;

			svg {
				width: 100px;
				height: 100px;
			}
			
			&:after {
				display: inline-block;
				width: 100px;
				height: 100px;
				background-repeat: no-repeat;
				background-size: contain;
				background-position: 50%;
				background-color: transparent;
				vertical-align: middle;
			}
		}
		span {
			display: block;
		}
	}	
}

$icon-list: sassvg-list("svg");

.o-icons__sassvg {
	@each $icon in $icon-list {
		$c: rgb(random(256) - 1, random(256) - 1, random(256) - 1);
		.#{$icon} {
			&:after {
				content: '';
				@include oIconsGetSassvg($icon, $color: $c, $apply-base-styles: false);
			}			
		}
	}	
}

.o-icons__svg-fallback-png {
	@each $icon in $icon-list {
		.#{$icon} {
			&:after {
				content: '';
				@include oIconsGetSvg($icon, $apply-base-styles: false);
			}			
		}
	}		
}

.o-icons__svg-symbol {
	@each $icon in $icon-list {
		.#{$icon} {
			svg {
				fill: rgb(random(256) - 1, random(256) - 1, random(256) - 1);
			}
		}
	}
}

.o-icons__embedded-symbol {
	@each $icon in $icon-list {
		.#{$icon} {
			svg {
				fill: rgb(random(256) - 1, random(256) - 1, random(256) - 1);
			}
		}
	}
}

